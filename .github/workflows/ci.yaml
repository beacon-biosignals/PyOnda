name: PyOnda CI
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  AWS_REGION: us-east-2

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: ${{ steps.cached-poetry-dependencies.outputs.cache-hit != 'true' }}
      run: poetry install --no-interaction --no-root
      env:
        GITHUB_TOKEN: ${{ github.token }}
    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install project
      run: poetry install --no-interaction
    - name: Activate venv, format & run tests
      run: |
        source .venv/bin/activate
        black .
        coverage run -m pytest tests/
    - uses: reviewdog/action-suggester@v1
      if: ${{ !cancelled() && github.event_name == 'pull_request' }}
      with:
        tool_name: black
